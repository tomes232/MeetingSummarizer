Look's good. Yeah. Okay. Yeah, that's true I think. Oh yeah. Yeah. Yeah, we haven't got that much to talk about, I don't think. Yeah. Yes, we can do that. Alright. Yeah well, that that's the way it works. It's got delimiters in-between the mar the boundaries. But Yeah, if you're happy to do that, yeah. And you're saying you need a a label for each segment. But I mean the most I ca you don't need a one. Well, I could give you an I_D_, but it'd be quite difficult to actually give a topic a title. Right. Okay. Yeah, that's no problem. Hmm. Mm. Um is it not segments? Or is it dialogue act dialogue acts? Yeah. I think that's it, yeah. Yeah, they've all got an I_D_ for each utterance. Yeah, and it's got a different uh file for each speaker. N no, it just points to the to the words. Yeah, yeah. The I suppose so, the utterances. But also includes things like like Yeah, think so. Mm. Yeah, can you not just leaves those lines blank? Oh alright. Okay. Hmm. Yeah, what did you use to make that file? Just in Perl? You didn't use an X_M_L_ parser? Okay. Hmm. Hmm. Hmm. Well like function words and stuff. Mm. Hmm. Well, um when it splits the topics up, it does do it on regular words that um that occur. But it doesn't tell you what they are, no. Hmm. Yeah. Yeah. Yeah, you can't really get any other output. No. No. Mm-hmm. Yeah, it's supposed to split it into cu coherent topics with the similar information. Hmm. Hmm. Yeah. Hmm. Hmm. Hmm. Hmm. Hmm. Yeah. Oh I'm sure it'd be quite straightforward, some of the tasks we have to do. But yet no one really understands them, the actual X_M_L_ parsing. Hmm. Yeah, that sounds like an idea. Yeah. Yeah, just send us an email and tell us what's happening. Right.